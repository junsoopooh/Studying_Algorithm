# SPA
인스타그램 같이 페이지 전환이 새로고침 없이 부드럽게 동작하는 웹사이트를 SPA(Single Page Application)이라고 한다.
요런 사이트들 특징이 html 파일을 1개만 쓰고 다른 페이지 보여주고 싶을 때 html 부분만 싹 갈아치워서 보여줌으로써 부드럽게 동작한다.
그러니까 페이지마다 html을 두는 것이 아닌 하나의 HTML에다가 사용자가 특정 페이지를 호출할 때 그 HTML에 내용을 채워서 보내주는 것이 SPA이다.

이러한 SPA을 만드는데 가장 많이 쓰이는 javascript 라이브러리 중 하나가 바로 react

#React 장점
- html을 함수, array, object 이런 곳에 보관하고 재사용할 수 있어서 큰 프로젝트일수록 html 관리가 편하다
- React Native를 쓰면 같은 리액트 문법으로 모바일 앱개발이 가능하다. 보통 모바일 앱을 개발하기 위해서는 안드로이드 같은 경우 코틀린을 IOS는 스위프트를 배워야 한다. 그러나 react Native를 사용하면 js로 한번 개발해서 안드로이드 앱과 IOS를 동시에 만들 수 있다.
- 브라우저에 Virtual DOM(가상의 DOM)을 통해서 렌더링 하기 때문에 속도가 훨씬 빠르다.
    - DOM (Document Object Model) :**브라우저의 렌더링 엔진은 웹 문서를 로드한 후, 파싱하여 웹 문서를 브라우저가 이해할 수 있는 구조로 구성하여 메모리에 적재**하는데 이를 DOM이라 한다.
    - 기존에는 DOM을 변형 시키기 위해서 자바스크립트로 DOM 하나하나 선택해서 특정 이벤트 발생하면 변화 주도록 설정해야 했다. 그런데 이렇게 개발하면 처리해야 할 이벤트와 관리해야 할 상태값이 너무 다양해진다.
    - 그런데 리액트는 상태가 바뀌었을 때 DOM을 어떻게 업데이트 할 지 규칙을 정하는 게 아니라 아예 싹 날리고 모든걸 새로 만들어서 보여준다는 아이디에서 개발되었다. 이렇게 되면 속도가 굉장히 느릴텐데 리액트에서는 Virtual DOM을 통해 속도까지 개선함.
    - Virtual DOM : 브라우저에 실제로 보여지는 DOM이 아니라 그냥 메모리에 가상으로 존재하는 DOM이다. 그냥 javaScript 객체여서 작동 성능이 실제 브라우저에서 DOM 보여주는 것 보다 빠르다. 업데이트 필요한 곳에 UI를 Virtaul DOM을 통해 랜더링하고 리액트 개발팀이 만든 알고리즘을 통해 실제 브라우저의 보여지는 DOM과 비교한 후 차이가 있는 곳을 발견하여 실제 DOM에 패치시켜준다. 이를 통해 “업데이트 어떻게 할 지”에 대한 고민없이 빠른 성능도 지켜낸다.

#React 단점 
- 방대한 학습량, 새로운 버전에 대한 학습 요구
- 높은 상태관리 복잡도
    - Virtual DOM에서 바뀐 부분만을 업데이트 하는 것인데 이것은 start가 바뀐 부분만을 찾는다는 것이다. 성능 최적화를 위해서는 state를 잘 관리하는 것이 중요하다. 웹사이트의 규모가 커져서 컴포넌트의 개수가 많아지면 상태관리의 복잡도 또한 증가한다. 큰 프로젝트일 경우 이런 상태관리를 위해 Redux, Recoil, Mobx와 같은 상태관리 라이브러리를 사욯한다.
