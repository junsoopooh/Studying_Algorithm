연습문제

1.2-1

응용 프로그램 수준에서 알고리즘이 필요한 프로그램의 예를 들라. 그리고 이용된 알고리즘의 기능에 대해 논하라.

나의 답 : 계산 및 결산 프로그램. 수학의 사칙연산 알고리즘이 이용 되었다.



1.2-2

동일한 기계에서 삽입 정렬과 병합 정렬의 구현 결과를 비교한다고 가정하자. n개의 입력에 대해 삽입 정렬은 8n^2번을, 병합 정렬은 64nlog_2(n)번을 계산하고 각각 종료한다. n값이 얼마일 때 삽입 정렬이 병합 정렬보다 빠를까? 



나의 답 : 삽입 정렬은 n^2, 병합 정렬은 nlog_2(n)의 시간복잡도를 가진다. 각각 다른 횟수만큼 계산하므로 n값을 다르게 대입하면

삽입 정렬
$$
n^2=(8n^2)^2=64n^4=4(2n)^4
$$
병합 정렬
$$
nlog_2n=(64nlog_2n)log_2(64log_2n)
$$



두 식의 결과가 같을 때의 n값을 구한다. n값은 양의 정수이다.
$$
64n^4=(64n)(n^3)=(64n)(log_2n)log_2{(64log_2n)}
$$


양변을 64n으로 나눈 후 x를 설정하여 대입한다.
$$
n^3 = (log_2n)log_2(64log_2n)
$$


새로운 x를 설정하여 n을 치환해준다.
$$
2^x=n,x=log_2n,따라서 위 식은
xlog_2(64x)=(2^x)^3=2^{3x}와 같다.
$$
좌변의 x를 log 내부로 넣어주고 양 변을 2의 제곱 형태로 바꾼다. log 법칙에 따라 좌변의 log는 사라진다.
$$
(64x)^x = 2^{8^x}, 64x=2^8=256,x=4 따라서 n=16
$$
n이 16이 되기 전까지는 삽입 정렬이 병합 정렬보다 빠르다.

1.2-3

동일한 기계에서 수행시간이 100n^2인 알고리즘이 수행시간이 2^n인 알고리즘보다 빨라지는 n의 최솟값은 얼마인가?



나의 답 : 
$$
2^n/n^2 > 100
$$
이 성립하는 양의 정수 n을 찾아야 한다.

n = 10, 10 

n =20, 2621

n=15, 145

n=12, 28

n=14, 83

따라서 n이 15일때가 최솟값이다.







종합문제

1-1 수행시간의 비교

각 알고리즘은 size가 n인 1문제를 푸는데 f(n) 마이크로초가 소요됨.
그렇다면 t라는 시간동안 1문제를 푼다면 문제의 크기는 최대 몇까지 가능하겠는가?



 나의 답 : 마이크로초는 100만분의 1초로 10^-6 초를 뜻한다. 따라서 초 단위로는 n크기의 1문제를 푸는데 (f(n)*10^-6)초가 걸린다는 뜻이다.

그렇다면 1초의 경우를 생각했을 때, f(n)x10^-6 초 가 기준인 1을 넘으면 안된다. 따라서 f(n)x10^-6 < 1이므로 f(n) < 10^6 을 만족하는 최대 n을 각각 계산한다. 이후 더 긴 시간은 시간간의 단위 변환을 통해 계산한다.

우선 단위를 초로 맞춘다. 그렇다면 각각

1초, 60초(1분), 3600초(1시간), 86400초(1일),259200초(1달),31104000초(1년),3110400000초(1세기)이다. 

결과는 다음과 같다. 

|           | 1초          | 1분   | 1시간   | 1일      | 1월       | 1년         | 1세기(century) |
| --------- | ------------ | ----- | ------- | -------- | --------- | ----------- | -------------- |
| log_2(n)  | a1=2^(10^6)  | a1*60 | a1*3600 | a1*86400 | a1*259200 | a1*31104000 | a1*3110400000  |
| root n    | b1=10^12     | b1*60 | b1*3600 | b1*86400 | b1*259200 | b1*31104000 | b1*3110400000  |
| n         | c1=10^6      | c1*60 | c1*3600 | c1*86400 | c1*259200 | c1*31104000 | c1*3110400000  |
| nlog_2(n) | d1= 10^5     | d1*60 | d1*3600 | d1*86400 | d1*259200 | d1*31104000 | d1*3110400000  |
| n^2       | e1=10^3=1000 | e1*60 | e1*3600 | e1*86400 | e1*259200 | e1*31104000 | e1*3110400000  |
| n^3       | f1=10^2=100  | f1*60 | f1*3600 | f1*86400 | f1*259200 | f1*31104000 | f1*3110400000  |
| 2^n       | g1=19        | g1*60 | g1*3600 | g1*86400 | g1*259200 | g1*31104000 | g1*3110400000  |
| n!        | h1= 9        | h1*60 | h1*3600 | h1*86400 | h1*259200 | h1*31104000 | h1*3110400000  |
